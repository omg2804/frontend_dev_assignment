// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         {children}
//       </body>
//     </html>
//   );
// }

import type { Metadata } from "next"
import { Geist, Geist_Mono } from "next/font/google"
import "./globals.css"
import Navbar from "@/components/navbar" // ✅ Import Navbar

// Font imports
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  display: "swap",
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
  display: "swap",
})

// ✅ Updated metadata
export const metadata: Metadata = {
  title: {
    default: "Solve Ease – Frontend Assignment",
    template: "%s | Solve Ease",
  },
  description:
    "A modern, responsive Next.js app styled with Tailwind CSS. Built as part of the Solve Ease Frontend Intern assignment.",
  keywords: ["Next.js", "Tailwind", "Frontend", "Solve Ease", "Assignment"],
  authors: [{ name: "Om Gaikwad" }],
  openGraph: {
    title: "Solve Ease – Frontend Assignment",
    description:
      "Frontend assignment built with Next.js, Tailwind CSS, and TypeScript.",
    url: "https://your-deployment-link.vercel.app",
    siteName: "Solve Ease Assignment",
    locale: "en_US",
    type: "website",
  },
  twitter: {
    card: "summary_large_image",
    title: "Solve Ease – Frontend Assignment",
    description:
      "Responsive UI, performance optimizations, and accessibility with Next.js + Tailwind.",
  },
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode
}>) {
  return (
    <html lang="en" className="scroll-smooth">
      <head>
        <meta name="theme-color" content="#0f172a" />
        <link rel="icon" href="/favicon.ico" />
        <title>Solve Ease</title>
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-gray-50 text-gray-900 dark:bg-gray-900 dark:text-gray-100 transition-colors duration-300`}
      >
        {/* ✅ Sticky Navbar included */}
        <Navbar />

        {/* ✅ Main wrapper for consistent spacing & layout */}
        <main className="flex-1 min-h-screen flex flex-col">{children}</main>
      </body>
    </html>
  )
}
